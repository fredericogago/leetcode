name: Lint & Static Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint & Static Analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.13]  # extendable: [3.11, 3.12, 3.13]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linters & type-checkers
        run: |
          python -m pip install --upgrade pip
          pip install \
            ruff \
            mypy \
            pyright \
            radon

      - name: Run Ruff, Mypy & Pyright
        run: |
          ruff check . --config ruff.toml --output-format=github
          mypy .
          pyright

      - name: Enforce complexity ≤ B
        run: |
          # Generate an aggregate complexity score
          radon cc . -s -a | tee radon_report.txt
          # Fail if any block is graded C–F
          if grep -E '\b[C-F]\b' radon_report.txt; then
            echo "❌ Complexity exceeded grade B"
            exit 1
          fi
